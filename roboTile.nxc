//right motor is B
//left motor is C
//light sensor is port 1
//left b is port 3
//right b is port 2

int light = 0;
int dark = 0;
int midpoint = 0;



sub calibrate2() {
    TextOut(15,LCD_LINE2,"Light?");
    until(SENSOR_2 == 1); 
    light = SENSOR_1;
    TextOut(15,LCD_LINE3,"light = ");
    NumOut(15,LCD_LINE4,light);
    
    TextOut(15,LCD_LINE2,"Black?");
    until(SENSOR_3 == 1);
    dark = SENSOR_1;
    TextOut(15,LCD_LINE3,"dark = ");
    NumOut(15,LCD_LINE5,dark);
    Wait(1000);

    //calculate midpoint
    //+dark b/c midpoint between dark and light (not 0 and whatever)
    midpoint = ((light - dark) / 2) + dark;
    
    TextOut(15,LCD_LINE6,"Midpoint = ");
    NumOut(15,LCD_LINE7,midpoint);
    Wait(5000);
}



sub startPosition(){
    bool onBlack = false;
    OnFwd(OUT_BC, 20);
    while(!onBlack) {	//continuously check light sensor
    	TextOut(15,LCD_LINE2,"Current = ");
	NumOut(15,LCD_LINE3,SENSOR_1);

     	if(Sensor(IN_1) <= midpoint){  //calibrated light sensor
//		OnFwd(OUT_BC,20);
//		until(Sensor(IN_1)  midpoint);
		
		OnFwd(OUT_BC,0);//makeitstop
		Wait(1000);
		PlayTone(262,400); //beep
		onBlack = true;
	}
     }
     Wait(1000);
     RotateMotor(OUT_B,50,120);
}
/*
sub followTiles(){
     bool onBlack = Sensor(IN_1)<THRESHOLD;
     int blackCount = 1;
     while (blackCount<16){
     	   if (onBlack){
	      OnFwd(OUT_BC, 20);
	      until(Sensor(IN_1)>THRESHOLD);
	      Off(OUT_BC);
	      onBlack = false;
	   }else{
		OnFwd(OUT_BC, 20);
		until(Sensor(IN_1)<THRESHOLD);
		Off(OUT_BC);
		onBlack = true;
		blackCount++;
		PlayTone(262,400);
	   }

      }
}
*/

task main() {
     SetSensorLight(IN_1); // set light sensor
     SetSensor(IN_2,SENSOR_TOUCH); //need to set the touch sensors!
     SetSensor(IN_3,SENSOR_TOUCH);
     calibrate2();
     startPosition();
//     followTiles();
}
